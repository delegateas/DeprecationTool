<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStripMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsInfo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAPvSURBVGhD7VrdSxRRFPex/6K/IXUsMBJ7kSjoJSJ6iZ4i
        6MUeWnetDHvo+xMjJDEIInzoIcuyyMqiMCyKsgwsXXd2V/P7Y/1adW73zJyFdebMx70zk2z0gx/Luvfc
        87tz7z3n3DsW/ce/gIq6gQ2l0URFSVStLo2pTfyzszii9iuR+KwSi2vwCd/h7/h7NbQHO+xifVASTZVz
        Qae5yC4lpjJxxrvAHvrBLv8OyqJqpRJNNBbXqOO0MDHq/fD+oF90EQ421aY3Gk9cTZlFBMQU9A9+0GVw
        UGKJKiU22EY4DYHgJ1GFrv1DqUkeKImp32hn4VD3x/2iBHnwiHFIiahpykno5H7BP0oRBzwBP+K3HFfZ
        9vok23UuzSr5J9XGleBfZiZgDcosm8jdMfagO8Pio1lmhqZprG8oy1o/ZNjRO6OkPUVDh8CegCggumFP
        tIyxQUK0E3qTSwIDGWzzHJ0wVBKd0Lz3dgYlyeHG0ymyXzNBF0q0h56kBOL81ceTKMMfLj6cJPs3MeWa
        7CAjEoYk914ZQvfBYPeFNOlnDbk+lGoF1CQi5cGzL3PoOhjc6pgm/eQT9NnWTiJrf9upJFtd1dA1jfbP
        c/osQfsjzSP6dyf8SC1Z/FAk9wKUtiJVZTWPHk74NLBosYEl4oTM4qrFhma8y1KKQ31ON6bZ+HwK3dKo
        vz9usdlxJoW/0pjzPAA+C1wvSjcAhwyqoR33Xx/Wk1YDD4GQmD72L7LhqWWUwti+a8bSyWfzy2n8lUZP
        wtsSAoJelG6Ar6smqqEMoYQw/w1ivRvOt05Y7OwIelG6AT6iTqphEGx5N4sS7TEwkmXlJ2l7iqAXpRvQ
        z7BEQz/cXKuyFz3uoXZ5RWMHb/4m+7Aj6EXpBowDON1YhhBmu38toER7TGRW2OGmEbIPR3K9KN2AfntA
        NZRkx1f3Jw/F3J7L1s3ujXENpRsIcgaO8ejkhtff59nWOskzAtA8A0HugTe98yiTxhOekSk7EVr2QJBR
        CDKqHX4OZ1kZ39yUnQgtUSioPACb1wm3X7kXbF5I5QGhTGzHnWed652Gdm+HFzeCXpRuQLQWciJkYjtS
        7WVoqYVEq9H1JVGNAqDOpg2889Ij5yPm+74F0k6EoBMlr4XoiYxi2ANwPJEBRM7EFEOfAaczMUD0VsLM
        kAfgfisB8LMXwhyA7do3Q+ZmLsfwBiBwMweQvRsNYwDCd6M5yN5OUwksn5SNLWVvp3PgKbtw3w/kAE9A
        Zjn5oe7Pz5M3A9ag7MYWZ8DvyHKAKIAhtvDeUuZDT3Y8I/otO3LU++H9eUpSQQJqEmNGCuxNvRlQ2kJ9
        DocMLqhw/ldi/VFU9AcgkBUiImqZEAAAAABJRU5ErkJggg==
</value>
  </data>
</root>