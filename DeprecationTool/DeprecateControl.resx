<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStripMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsSettings.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        l7xYAAAAAElFTkSuQmCC
</value>
  </data>
</root>