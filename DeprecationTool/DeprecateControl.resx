<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStripMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsSettings.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>